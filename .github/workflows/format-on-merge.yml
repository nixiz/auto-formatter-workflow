name: Run Python Script and Format Code on Pull Request Merge

on:
  pull_request:
    types: [closed]
     #branches:
      # - 'feature-*'
       #- master

jobs:
  run_script:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      #- name: Install dependencies
      #  run: pip install -r requirements.txt
      - name: Get list of files
        id: get_files
        run: |
          git fetch origin ${GITHUB_REF}
          git checkout ${GITHUB_BASE_REF}
          echo $(git diff --name-only HEAD^ HEAD)
          echo ::set-output name=files::$(git diff --name-only HEAD^ HEAD)
      - name: Run Python script
        run: | 
          python ./scripts/script.py ${{ steps.get_files.outputs.files }}
      - name: Put timestamp of the running action
        run: |
          echo "// Action Bot runned on $(date +%Y-%m-%d\ %H:%M:%S)" >> donotchange.txt
          cat donotchange.txt
        shell: bash
      - name: Setup git config
        run: |
          git config --global user.email ""
          git config --global user.name "GitHub Auto Formatter Action Bot"
      - name: Commit changes
        run: |
          git fetch origin ${GITHUB_REF}
          git checkout ${GITHUB_BASE_REF}
          git commit -a -m "Format code with clang-format"
          # git push origin HEAD:${{ github.event.pull_request.head.ref }}

      # - name: Get last commit from merged branch
      #   id: get_last_commit
      #   run: |
      #     git fetch origin main
      #     last_commit=$(git log -1 --pretty=format:%H origin/main)
      #     echo "::set-output name=last_commit::$last_commit"

      # - name: Make commit on top of merged pull request
      #   run: |
      #     last_commit=${{ steps.get_last_commit.outputs.last_commit }}
      #     git checkout -b feature-branch
      #     # Make your changes to the code
      #     git add .
      #     git commit -m "Added new feature"
      #     git checkout main
      #     git merge feature-branch -m "Merge pull request"
      #     git cherry-pick $last_commit..HEAD
      #     git push origin main